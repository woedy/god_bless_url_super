version: "3.9"

services:
  backend:
    build:
      context: ./backend
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://urlshort:urlshort@db:5432/urlshort}
      RATE_LIMIT_REDIS_URL: ${RATE_LIMIT_REDIS_URL:-redis://redis:6379/0}
      REDIRECT_BASE_URL: ${REDIRECT_BASE_URL:-http://backend:8000}
    ports:
      - target: 8000
        published: ${BACKEND_PUBLISHED_PORT:-0}
        protocol: tcp
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - staticfiles:/app/staticfiles

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE: ${VITE_API_BASE:-http://backend:8000}
    environment:
      VITE_API_BASE: ${VITE_API_BASE:-http://backend:8000}
    ports:
      - target: 80
        published: ${FRONTEND_PUBLISHED_PORT:-0}
        protocol: tcp
    depends_on:
      - backend

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-urlshort}
      POSTGRES_USER: ${POSTGRES_USER:-urlshort}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-urlshort}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-urlshort}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine

volumes:
  postgres_data:
  staticfiles:
